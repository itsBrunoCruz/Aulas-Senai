programa
{	

	//--Variáveis globais
	inteiro contador = 0, contador2 = 0
	cadeia produto[999]
	cadeia pular = "\n"
	cadeia classificacaoProduto[999]
	funcao inicio()
	{
		inteiro acao 

		//--Estrutura de repetição principal
		faca{
			//--Chama função para imprimir
			ImprimeMenu()
			
			//--Ler a ação
			leia(acao)

			escolha(acao){
				caso 1:
				 	Inserir()
				 	pare
				 caso 2:
				 	Atualizar()
				 	pare
				 caso 3:
				 	Excluir()
				 	pare
				 caso 4:
				 	Exibir("")
				 	pare
				 caso 5:
				 	ImprimirOrdem()
				 	pare
				 caso 9:
				 	escreva(pular + "programa encerrado!")
				 	pare	 			 	
			}

		}enquanto(acao != 9)		
	}

	funcao ImprimeMenu(){
		
		escreva(pular + pular + "***** MENU *****   " + pular)
		escreva("1 - Inserir        " + pular)
		escreva("2 - Atualizar      " + pular)
		escreva("3 - Excluir        " + pular)
		escreva("4 - Exibir         " + pular)
		escreva("5 - ImprimirOrdem  " + pular)
		escreva("9 - Encerrar 	   " + pular)
	}

	funcao Inserir(){

		cadeia nomeProduto = ""
		cadeia classificacao = ""

		faca{
			escreva("Informe o nome do produto: ")
			leia(nomeProduto)
			
			se (nomeProduto == ""){
				escreva("Nome do produto inválido!" + pular)
			}				
		} enquanto(nomeProduto == "")

		produto[contador] = nomeProduto
		contador += 1

		faca{
			escreva("Informe a classifcação do produto: ")
			leia(classificacao)
			
			se (classificacao == ""){
				escreva("Classificação do produto inválido!" + pular)
			}				
		} enquanto(classificacao == "")

		classificacaoProduto[contador2] = classificacao
		contador2 += 1
			
	}

	funcao Exibir(cadeia ordem){

		se (ordem == "D"){
			para (inteiro i = contador; i >= 0; i--){
				se (produto[i] != ""){
					escreva("Produto (" + i +"): " + produto[i] + pular)
				}
			}
		} senao {
			para (inteiro i = 0; i < contador; i++){
				se (produto[i] != ""){
					escreva("Produto (" + i +"): " + produto[i] + pular)
				}
			}
		}
		para (inteiro i = 0; i < contador; i++){
			se(classificacaoProduto[i] != ""){
				escreva("Classificação do produto(" + i +"): " + classificacaoProduto[i] + pular)
			}
		}
	}

	funcao Atualizar(){

		inteiro indice
		cadeia descricao

		faca{
			escreva(pular + "Informe o indice desejado: ")
			leia(indice)
		} enquanto (indice >= contador)

		faca{
			escreva(pular + "Informe a nova descrição: ")
			leia(descricao)
		} enquanto (descricao == "")
		
		//--atualizar o valor no vetor
		produto[indice] = descricao
		
	}

	funcao Excluir(){

		inteiro indice = 0

		faca{
			escreva(pular + "Informe o indice a ser excluido: ")
			leia(indice)
		} enquanto (indice >= contador)
		
		produto[indice] = ""
		
		faca{
			escreva(pular + "Informe o indice da classificação a ser excluido: ")
			leia(indice)
		} enquanto (indice >= contador)
		
		classificacaoProduto[indice] = ""
		
	}

	funcao ImprimirOrdem(){

		cadeia ordem = "" 
		//- C = crescente
		//- D = decrecente

		escreva(pular + "Informa a ordem (D) Decrecente ou (C) Crescente: ")
		leia(ordem)

		Exibir(ordem)
		
	}
}
/* $$$ Portugol Studio $$$ 
 * 
 * Esta seção do arquivo guarda informações do Portugol Studio.
 * Você pode apagá-la se estiver utilizando outro editor.
 * 
 * @POSICAO-CURSOR = 1262; 
 * @PONTOS-DE-PARADA = ;
 * @SIMBOLOS-INSPECIONADOS = ;
 * @FILTRO-ARVORE-TIPOS-DE-DADO = inteiro, real, logico, cadeia, caracter, vazio;
 * @FILTRO-ARVORE-TIPOS-DE-SIMBOLO = variavel, vetor, matriz, funcao;
 */
