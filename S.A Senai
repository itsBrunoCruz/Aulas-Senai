programa
{	
	const cadeia banco_login = "ADM", banco_senha = "ADM"

	//--Variáveis globais
	inteiro contador = 0, contador2 = 0
	cadeia produto[999]
	cadeia pular = "\n"
	cadeia classificacaoProduto[999]
	inteiro produtoEstoque[999]

	funcao inicio(){

		logico resultado = falso
		inteiro acao 
		resultado = login()
		
		se(resultado){
			escreva("\nSeja bem-vindo!")

			faca{
			//--Chama função para imprimir
				ImprimeMenu()
				
				//--Ler a ação
				leia(acao)
	
				escolha(acao){
					caso 1:
					 	Inserir()
					 	pare
					 caso 2:
					 	Atualizar()
					 	pare
					 caso 3:
					 	Excluir()
					 	pare
					 caso 4:
					 	Exibir("")
					 	pare
					 caso 5:
					 	ImprimirOrdem()
					 	pare
					 caso 6:
					 	ImprimirClassificacao()
					 	pare
					 caso 7:
					 	AdicionarEstoque()
					 	pare
					 caso 8:
					 	ExcluirEstoque()
					 	pare
					 caso 9:
					 	escreva(pular + "Programa finalizado!")
					 	pare	 			 	
				}

			}enquanto(acao != 9)
				
		} senao{
			escreva("\nLogin/Senha inválido!")
		}
	}
	
	funcao logico login(){
		cadeia login, senha logico resultado = falso
		
		escreva("Informe o login: ") 
		leia(login)
		
		escreva("Informe a senha: ")
		leia(senha)
		
		se(banco_login == login e banco_senha == senha){
			resultado = verdadeiro
			
		}
		retorne resultado
	}

	funcao ImprimeMenu(){
		escreva(pular + pular + "***** MENU *****   " + pular)
		escreva("1 - Inserir produto" + pular)
		escreva("2 - Atualizar produto" + pular)
		escreva("3 - Excluir produto" + pular)
		escreva("4 - Exibir produto" + pular)
		escreva("5 - Imprimir produtos por ordem" + pular)
		escreva("6 - Imprimir produtos por classificação" + pular)
		escreva("7 - Adicionar estoque" + pular)
		escreva("8 - Remover estoque" + pular)
		escreva("9 - Encerrar" + pular)
	}

	funcao Inserir(){
		cadeia nomeProduto = ""
		cadeia classificacao = ""

		faca{
			escreva("Informe o nome do produto: ")
			leia(nomeProduto)
			
			se (nomeProduto == ""){
				escreva("Nome do produto inválido!" + pular)
			}				
		} enquanto(nomeProduto == "")

		produto[contador] = nomeProduto
		contador += 1

		faca{
			
			escreva("Informe a classificação do produto: ")
			leia(classificacao)
			
			se (classificacao == "" ou classificacao != "A" e classificacao != "B" e classificacao != "C" ){
				escreva("Classificação do produto inválido!" + pular)
			}				
		} enquanto(classificacao == "" ou classificacao != "A" e classificacao != "B" e classificacao != "C" )
		classificacaoProduto[contador2] = classificacao
		contador2 += 1
			
	}

	funcao Exibir(cadeia ordem){

		se (ordem == "D"){
			para (inteiro i = contador; i >= 0; i--){
				se (produto[i] != ""){
					escreva("Produto (" + i +"): " + produto[i] + pular)
				}
			}
		} senao {
			para (inteiro i = 0; i < contador; i++){
				se (produto[i] != ""){
					escreva("Produto (" + i +"): " + produto[i] + pular)
				}
			}
		}
		para (inteiro i = 0; i < contador; i++){
			se(classificacaoProduto[i] != ""){
				escreva("Classificação do produto(" + i +"): " + classificacaoProduto[i] + pular)
			}	
		}	
	}

	funcao Atualizar(){
		inteiro indice
		cadeia descricao

		faca{
			escreva(pular + "Informe o índice desejado: ")
			leia(indice)
		} enquanto (indice >= contador)

		faca{
			escreva(pular + "Informe a nova descrição: ")
			leia(descricao)
		} enquanto (descricao == "")
		
		//--atualizar o valor no vetor
		produto[indice] = descricao
		
	}

	funcao Excluir(){
		inteiro indice = 0

		faca{
			escreva(pular + "Informe o índice a ser excluido: ")
			leia(indice)
		} enquanto (indice >= contador)
		
		produto[indice] = ""
		
		faca{
			escreva(pular + "Informe o índice da classificação a ser excluido: ")
			leia(indice)
		} enquanto (indice >= contador)
		
		classificacaoProduto[indice] = ""
		
	}

	funcao ImprimirOrdem(){
		cadeia ordem = "" 
		//- C = crescente
		//- D = decrecente

		escreva(pular + "Informa a ordem (D) Decrecente ou (C) Crescente: ")
		leia(ordem)

		Exibir(ordem)
	}

	funcao ImprimirClassificacao(){
		cadeia ordemClassificacao
		
		escreva("Informe qual a classificação (A, B ou C): ")
		leia(ordemClassificacao)
		
		para (inteiro i = 0; i < contador; i++){
			se(classificacaoProduto[i] == ordemClassificacao){
				escreva("\nOrdem do produto(" + i +") "+produto[i]+ " : " + classificacaoProduto[i] + pular)
			}	
		}
	}

	funcao AdicionarEstoque(){
		inteiro indiceEstoque = 0
		inteiro quantidadeEstoque = 0
		
		escreva("***** Produtos Disponíveis *****")
		para (inteiro i = 0; i < contador; i++){
			se (produto[i] != ""){
				escreva(pular+"Produtos (" + i +"): " + produto[i] +" Quantidade: "+produtoEstoque[i])
			}		
		}
			
		escreva(pular + "Informe o índice: ")
		leia(indiceEstoque)
	
		 se (indiceEstoque >= contador){
		 	escreva("Indice inválido")
		 } senao{
			 faca{
		 		escreva("Informe a quantidade: ")
				leia(quantidadeEstoque)
				produtoEstoque[indiceEstoque] = quantidadeEstoque + produtoEstoque[indiceEstoque]
				se (quantidadeEstoque <= 0){
					escreva("Quantidade inválida!" + pular)
				}	
							
			 }enquanto(quantidadeEstoque <= 0)	
		 }
	}


	funcao ExcluirEstoque(){
		inteiro indiceEstoque = 0
		inteiro reducaoEstoque = 0

		escreva("***** Produtos Disponíveis *****")
		para (inteiro i = 0; i < contador; i++){
			se (produto[i] != ""){
				escreva(pular+"Produtos (" + i +"): " + produto[i] +" Quantidade: "+produtoEstoque[i])
			}	
		}

		escreva(pular + "Informe o índice: ")
		leia(indiceEstoque)

		se (indiceEstoque >= contador){
		 	escreva("Índice inválido!")
		 
		 } senao{
		 	faca{
				escreva("Informe a quantidade: ")
				leia(reducaoEstoque)
				produtoEstoque[indiceEstoque] = produtoEstoque[indiceEstoque] -  reducaoEstoque	
			
				se(reducaoEstoque <= 0){
					escreva("Quantidade inválida!"+pular)
				}

			}enquanto(reducaoEstoque <= 0)	
		}
	}
}
